{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NoopExporter = /** @class */function () {\n  function NoopExporter() {}\n  // By default does nothing\n  NoopExporter.prototype.export = function (_metrics, _resultCallback) {};\n  // By default does nothing\n  NoopExporter.prototype.shutdown = function () {\n    return Promise.resolve();\n  };\n  return NoopExporter;\n}();\nexport { NoopExporter };","map":{"version":3,"names":["NoopExporter","prototype","export","_metrics","_resultCallback","shutdown","Promise","resolve"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\export\\NoopExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricExporter, MetricRecord } from './types';\nimport { ExportResult } from '@opentelemetry/core';\n\nexport class NoopExporter implements MetricExporter {\n  // By default does nothing\n  export(\n    _metrics: MetricRecord[],\n    _resultCallback: (result: ExportResult) => void\n  ): void {}\n\n  // By default does nothing\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAmBA,IAAAA,YAAA;EAAA,SAAAA,aAAA,GAWA;EAVE;EACAA,YAAA,CAAAC,SAAA,CAAAC,MAAM,GAAN,UACEC,QAAwB,EACxBC,eAA+C,GACxC,CAAC;EAEV;EACAJ,YAAA,CAAAC,SAAA,CAAAI,QAAQ,GAAR;IACE,OAAOC,OAAO,CAACC,OAAO,EAAE;EAC1B,CAAC;EACH,OAAAP,YAAC;AAAD,CAAC,CAXD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}