{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './NoopMeter';\nexport * from './NoopMeterProvider';\nexport * from './types/BatchObserverResult';\nexport * from './types/BoundInstrument';\nexport * from './types/Meter';\nexport * from './types/MeterProvider';\nexport * from './types/Metric';\nexport * from './types/Observation';\nexport * from './types/ObserverResult';\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();","map":{"version":3,"names":["MetricsAPI","metrics","getInstance"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\api-metrics\\src\\index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './NoopMeter';\nexport * from './NoopMeterProvider';\nexport * from './types/BatchObserverResult';\nexport * from './types/BoundInstrument';\nexport * from './types/Meter';\nexport * from './types/MeterProvider';\nexport * from './types/Metric';\nexport * from './types/Observation';\nexport * from './types/ObserverResult';\n\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,cAAc,aAAa;AAC3B,cAAc,qBAAqB;AACnC,cAAc,6BAA6B;AAC3C,cAAc,yBAAyB;AACvC,cAAc,eAAe;AAC7B,cAAc,uBAAuB;AACrC,cAAc,gBAAgB;AAC9B,cAAc,qBAAqB;AACnC,cAAc,wBAAwB;AAEtC,SAASA,UAAU,QAAQ,eAAe;AAC1C;AACA,OAAO,IAAMC,OAAO,GAAGD,UAAU,CAACE,WAAW,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}