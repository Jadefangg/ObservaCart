{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { normalize } from './platform/index';\nexport class InstrumentationNodeModuleFile {\n  supportedVersions;\n  patch;\n  unpatch;\n  name;\n  constructor(name, supportedVersions,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  patch,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  unpatch) {\n    this.supportedVersions = supportedVersions;\n    this.patch = patch;\n    this.unpatch = unpatch;\n    this.name = normalize(name);\n  }\n}","map":{"version":3,"names":["normalize","InstrumentationNodeModuleFile","supportedVersions","patch","unpatch","name","constructor"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\instrumentation\\src\\instrumentationNodeModuleFile.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationModuleFile } from './types';\nimport { normalize } from './platform/index';\n\nexport class InstrumentationNodeModuleFile\n  implements InstrumentationModuleFile\n{\n  public name: string;\n  constructor(\n    name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch: (moduleExports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch: (moduleExports?: any, moduleVersion?: string) => void\n  ) {\n    this.name = normalize(name);\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAiBA,SAASA,SAAS,QAAQ,kBAAkB;AAE5C,OAAM,MAAOC,6BAA6B;EAM/BC,iBAAA;EAEAC,KAAA;EAEAC,OAAA;EAPFC,IAAI;EACXC,YACED,IAAY,EACLH,iBAA2B;EAClC;EACOC,KAA0D;EACjE;EACOC,OAA8D;IAJ9D,KAAAF,iBAAiB,GAAjBA,iBAAiB;IAEjB,KAAAC,KAAK,GAALA,KAAK;IAEL,KAAAC,OAAO,GAAPA,OAAO;IAEd,IAAI,CAACC,IAAI,GAAGL,SAAS,CAACK,IAAI,CAAC;EAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}