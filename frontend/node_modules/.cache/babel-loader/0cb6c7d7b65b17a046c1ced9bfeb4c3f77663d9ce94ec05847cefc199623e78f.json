{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api-metrics';\n/** Default Meter configuration. */\nexport var DEFAULT_CONFIG = {};\n/** The default metric creation options value. */\nexport var DEFAULT_METRIC_OPTIONS = {\n  disabled: false,\n  description: '',\n  unit: '1',\n  valueType: api.ValueType.DOUBLE\n};","map":{"version":3,"names":["api","DEFAULT_CONFIG","DEFAULT_METRIC_OPTIONS","disabled","description","unit","valueType","ValueType","DOUBLE"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api-metrics';\nimport { Resource } from '@opentelemetry/resources';\nimport { Processor } from './export/Processor';\nimport { MetricExporter } from './export/types';\n\n/** MeterConfig provides an interface for configuring a Meter. */\nexport interface MeterConfig {\n  /** Metric exporter. */\n  exporter?: MetricExporter;\n\n  /** Metric collect interval */\n  interval?: number;\n\n  /** Resource associated with metric telemetry */\n  resource?: Resource;\n\n  /** Metric Processor. */\n  processor?: Processor;\n}\n\n/** Default Meter configuration. */\nexport const DEFAULT_CONFIG = {};\n\n/** The default metric creation options value. */\nexport const DEFAULT_METRIC_OPTIONS = {\n  disabled: false,\n  description: '',\n  unit: '1',\n  valueType: api.ValueType.DOUBLE,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,GAAG,MAAM,4BAA4B;AAoBjD;AACA,OAAO,IAAMC,cAAc,GAAG,EAAE;AAEhC;AACA,OAAO,IAAMC,sBAAsB,GAAG;EACpCC,QAAQ,EAAE,KAAK;EACfC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEN,GAAG,CAACO,SAAS,CAACC;CAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}