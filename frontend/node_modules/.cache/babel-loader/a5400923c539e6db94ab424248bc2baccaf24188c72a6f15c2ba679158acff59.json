{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { ExportResultCode, unrefTimer, globalErrorHandler } from '@opentelemetry/core';\nvar DEFAULT_EXPORT_INTERVAL = 60000;\nvar Controller = /** @class */function () {\n  function Controller() {}\n  return Controller;\n}();\nexport { Controller };\n/** Controller organizes a periodic push of metric data. */\nvar PushController = /** @class */function (_super) {\n  __extends(PushController, _super);\n  function PushController(_meter, _exporter, interval) {\n    if (interval === void 0) {\n      interval = DEFAULT_EXPORT_INTERVAL;\n    }\n    var _this = _super.call(this) || this;\n    _this._meter = _meter;\n    _this._exporter = _exporter;\n    _this._timer = setInterval(function () {\n      _this._collect().catch(function (err) {\n        globalErrorHandler(err);\n      });\n    }, interval);\n    unrefTimer(_this._timer);\n    return _this;\n  }\n  PushController.prototype.shutdown = function () {\n    clearInterval(this._timer);\n    return this._collect();\n  };\n  PushController.prototype._collect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._meter.collect()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, new Promise(function (resolve) {\n              _this._exporter.export(_this._meter.getProcessor().checkPointSet(), function (result) {\n                var _a;\n                if (result.code !== ExportResultCode.SUCCESS) {\n                  globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error('PushController: export failed in _collect'));\n                }\n                resolve();\n              });\n            })];\n        }\n      });\n    });\n  };\n  return PushController;\n}(Controller);\nexport { PushController };","map":{"version":3,"names":["ExportResultCode","unrefTimer","globalErrorHandler","DEFAULT_EXPORT_INTERVAL","Controller","PushController","_super","__extends","_meter","_exporter","interval","_this","call","_timer","setInterval","_collect","catch","err","prototype","shutdown","clearInterval","collect","_a","sent","Promise","resolve","export","getProcessor","checkPointSet","result","code","SUCCESS","error","Error"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\export\\Controller.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ExportResultCode,\n  unrefTimer,\n  globalErrorHandler,\n} from '@opentelemetry/core';\nimport { Meter } from '../Meter';\nimport { MetricExporter } from './types';\n\nconst DEFAULT_EXPORT_INTERVAL = 60_000;\n\nexport class Controller {}\n\n/** Controller organizes a periodic push of metric data. */\nexport class PushController extends Controller {\n  private _timer: NodeJS.Timeout;\n\n  constructor(\n    private readonly _meter: Meter,\n    private readonly _exporter: MetricExporter,\n    interval: number = DEFAULT_EXPORT_INTERVAL\n  ) {\n    super();\n    this._timer = setInterval(() => {\n      this._collect().catch(err => {\n        globalErrorHandler(err);\n      });\n    }, interval);\n    unrefTimer(this._timer);\n  }\n\n  shutdown(): Promise<void> {\n    clearInterval(this._timer);\n    return this._collect();\n  }\n\n  private async _collect(): Promise<void> {\n    await this._meter.collect();\n    return new Promise(resolve => {\n      this._exporter.export(\n        this._meter.getProcessor().checkPointSet(),\n        result => {\n          if (result.code !== ExportResultCode.SUCCESS) {\n            globalErrorHandler(\n              result.error ??\n                new Error('PushController: export failed in _collect')\n            );\n          }\n          resolve();\n        }\n      );\n    });\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,SACEA,gBAAgB,EAChBC,UAAU,EACVC,kBAAkB,QACb,qBAAqB;AAI5B,IAAMC,uBAAuB,GAAG,KAAM;AAEtC,IAAAC,UAAA;EAAA,SAAAA,WAAA,GAAyB;EAAA,OAAAA,UAAC;AAAD,CAAC,CAA1B;;AAEA;AACA,IAAAC,cAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAGlC,SAAAD,eACmBG,MAAa,EACbC,SAAyB,EAC1CC,QAA0C;IAA1C,IAAAA,QAAA;MAAAA,QAAA,GAAAP,uBAA0C;IAAA;IAH5C,IAAAQ,KAAA,GAKEL,MAAA,CAAAM,IAAA,MAAO;IAJUD,KAAA,CAAAH,MAAM,GAANA,MAAM;IACNG,KAAA,CAAAF,SAAS,GAATA,SAAS;IAI1BE,KAAI,CAACE,MAAM,GAAGC,WAAW,CAAC;MACxBH,KAAI,CAACI,QAAQ,EAAE,CAACC,KAAK,CAAC,UAAAC,GAAG;QACvBf,kBAAkB,CAACe,GAAG,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC,EAAEP,QAAQ,CAAC;IACZT,UAAU,CAACU,KAAI,CAACE,MAAM,CAAC;;EACzB;EAEAR,cAAA,CAAAa,SAAA,CAAAC,QAAQ,GAAR;IACEC,aAAa,CAAC,IAAI,CAACP,MAAM,CAAC;IAC1B,OAAO,IAAI,CAACE,QAAQ,EAAE;EACxB,CAAC;EAEaV,cAAA,CAAAa,SAAA,CAAAH,QAAQ,GAAtB;;;;;;YACE,qBAAM,IAAI,CAACP,MAAM,CAACa,OAAO,EAAE;;YAA3BC,EAAA,CAAAC,IAAA,EAA2B;YAC3B,sBAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO;cACxBd,KAAI,CAACF,SAAS,CAACiB,MAAM,CACnBf,KAAI,CAACH,MAAM,CAACmB,YAAY,EAAE,CAACC,aAAa,EAAE,EAC1C,UAAAC,MAAM;;gBACJ,IAAIA,MAAM,CAACC,IAAI,KAAK9B,gBAAgB,CAAC+B,OAAO,EAAE;kBAC5C7B,kBAAkB,CAChB,CAAAoB,EAAA,GAAAO,MAAM,CAACG,KAAK,cAAAV,EAAA,cAAAA,EAAA,GACV,IAAIW,KAAK,CAAC,2CAA2C,CAAC,CACzD;;gBAEHR,OAAO,EAAE;cACX,CAAC,CACF;YACH,CAAC,CAAC;;;;GACH;EACH,OAAApB,cAAC;AAAD,CAAC,CAvCmCD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}