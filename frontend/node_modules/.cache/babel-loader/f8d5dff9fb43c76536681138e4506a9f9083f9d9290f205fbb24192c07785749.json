{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { BaseObserverMetric } from './BaseObserverMetric';\nimport { MetricKind } from './export/types';\n/** This is a SDK implementation of UpDownSumObserver Metric. */\nvar UpDownSumObserverMetric = /** @class */function (_super) {\n  __extends(UpDownSumObserverMetric, _super);\n  function UpDownSumObserverMetric(name, options, processor, resource, instrumentationLibrary, callback) {\n    return _super.call(this, name, options, processor, resource, MetricKind.UP_DOWN_SUM_OBSERVER, instrumentationLibrary, callback) || this;\n  }\n  return UpDownSumObserverMetric;\n}(BaseObserverMetric);\nexport { UpDownSumObserverMetric };","map":{"version":3,"names":["BaseObserverMetric","MetricKind","UpDownSumObserverMetric","_super","__extends","name","options","processor","resource","instrumentationLibrary","callback","call","UP_DOWN_SUM_OBSERVER"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\UpDownSumObserverMetric.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api-metrics';\nimport { InstrumentationLibrary } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { BaseObserverMetric } from './BaseObserverMetric';\nimport { Processor } from './export/Processor';\nimport { MetricKind } from './export/types';\n\n/** This is a SDK implementation of UpDownSumObserver Metric. */\nexport class UpDownSumObserverMetric\n  extends BaseObserverMetric\n  implements api.UpDownSumObserver {\n  constructor(\n    name: string,\n    options: api.MetricOptions,\n    processor: Processor,\n    resource: Resource,\n    instrumentationLibrary: InstrumentationLibrary,\n    callback?: (observerResult: api.ObserverResult) => unknown\n  ) {\n    super(\n      name,\n      options,\n      processor,\n      resource,\n      MetricKind.UP_DOWN_SUM_OBSERVER,\n      instrumentationLibrary,\n      callback\n    );\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAASA,kBAAkB,QAAQ,sBAAsB;AAEzD,SAASC,UAAU,QAAQ,gBAAgB;AAE3C;AACA,IAAAC,uBAAA,0BAAAC,MAAA;EACUC,SAAA,CAAAF,uBAAA,EAAAC,MAAA;EAER,SAAAD,wBACEG,IAAY,EACZC,OAA0B,EAC1BC,SAAoB,EACpBC,QAAkB,EAClBC,sBAA8C,EAC9CC,QAA0D;WAE1DP,MAAA,CAAAQ,IAAA,OACEN,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRP,UAAU,CAACW,oBAAoB,EAC/BH,sBAAsB,EACtBC,QAAQ,CACT;EACH;EACF,OAAAR,uBAAC;AAAD,CAAC,CApBSF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}