{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\nexport class ProxyLoggerProvider {\n  getLogger(name, version, options) {\n    var _a;\n    return (_a = this.getDelegateLogger(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyLogger(this, name, version, options);\n  }\n  getDelegate() {\n    var _a;\n    return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_LOGGER_PROVIDER;\n  }\n  /**\n   * Set the delegate logger provider\n   */\n  setDelegate(delegate) {\n    this._delegate = delegate;\n  }\n  getDelegateLogger(name, version, options) {\n    var _a;\n    return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getLogger(name, version, options);\n  }\n}","map":{"version":3,"names":["NOOP_LOGGER_PROVIDER","ProxyLogger","ProxyLoggerProvider","getLogger","name","version","options","_a","getDelegateLogger","getDelegate","_delegate","setDelegate","delegate"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\api-logs\\src\\ProxyLoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\n\nexport class ProxyLoggerProvider implements LoggerProvider {\n  private _delegate?: LoggerProvider;\n\n  getLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger {\n    return (\n      this.getDelegateLogger(name, version, options) ??\n      new ProxyLogger(this, name, version, options)\n    );\n  }\n\n  getDelegate(): LoggerProvider {\n    return this._delegate ?? NOOP_LOGGER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate logger provider\n   */\n  setDelegate(delegate: LoggerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateLogger(\n    name: string,\n    version?: string | undefined,\n    options?: LoggerOptions | undefined\n  ): Logger | undefined {\n    return this._delegate?.getLogger(name, version, options);\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAmBA,SAASA,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,WAAW,QAAQ,eAAe;AAE3C,OAAM,MAAOC,mBAAmB;EAG9BC,SAASA,CACPC,IAAY,EACZC,OAA4B,EAC5BC,OAAmC;;IAEnC,OACE,CAAAC,EAAA,OAAI,CAACC,iBAAiB,CAACJ,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC,cAAAC,EAAA,cAAAA,EAAA,GAC9C,IAAIN,WAAW,CAAC,IAAI,EAAEG,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAEjD;EAEAG,WAAWA,CAAA;;IACT,OAAO,CAAAF,EAAA,OAAI,CAACG,SAAS,cAAAH,EAAA,cAAAA,EAAA,GAAIP,oBAAoB;EAC/C;EAEA;;;EAGAW,WAAWA,CAACC,QAAwB;IAClC,IAAI,CAACF,SAAS,GAAGE,QAAQ;EAC3B;EAEAJ,iBAAiBA,CACfJ,IAAY,EACZC,OAA4B,EAC5BC,OAAmC;;IAEnC,OAAO,CAAAC,EAAA,OAAI,CAACG,SAAS,cAAAH,EAAA,uBAAAA,EAAA,CAAEJ,SAAS,CAACC,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}