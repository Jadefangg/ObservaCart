{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregatorKind } from '../types';\nimport { hrTime } from '@opentelemetry/core';\n/** Basic aggregator for LastValue which keeps the last recorded value. */\nvar LastValueAggregator = /** @class */function () {\n  function LastValueAggregator() {\n    this._current = 0;\n    this._lastUpdateTime = [0, 0];\n    this.kind = AggregatorKind.LAST_VALUE;\n  }\n  LastValueAggregator.prototype.update = function (value) {\n    this._current = value;\n    this._lastUpdateTime = hrTime();\n  };\n  LastValueAggregator.prototype.toPoint = function () {\n    return {\n      value: this._current,\n      timestamp: this._lastUpdateTime\n    };\n  };\n  return LastValueAggregator;\n}();\nexport { LastValueAggregator };","map":{"version":3,"names":["AggregatorKind","hrTime","LastValueAggregator","_current","_lastUpdateTime","kind","LAST_VALUE","prototype","update","value","toPoint","timestamp"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\export\\aggregators\\LastValue.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AggregatorKind,\n  LastValue,\n  LastValueAggregatorType,\n  Point,\n} from '../types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hrTime } from '@opentelemetry/core';\n\n/** Basic aggregator for LastValue which keeps the last recorded value. */\nexport class LastValueAggregator implements LastValueAggregatorType {\n  private _current: number = 0;\n  private _lastUpdateTime: HrTime = [0, 0];\n  kind: AggregatorKind.LAST_VALUE = AggregatorKind.LAST_VALUE;\n\n  update(value: number): void {\n    this._current = value;\n    this._lastUpdateTime = hrTime();\n  }\n\n  toPoint(): Point<LastValue> {\n    return {\n      value: this._current,\n      timestamp: this._lastUpdateTime,\n    };\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SACEA,cAAc,QAIT,UAAU;AAEjB,SAASC,MAAM,QAAQ,qBAAqB;AAE5C;AACA,IAAAC,mBAAA;EAAA,SAAAA,oBAAA;IACU,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,eAAe,GAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IACxC,KAAAC,IAAI,GAA8BL,cAAc,CAACM,UAAU;EAa7D;EAXEJ,mBAAA,CAAAK,SAAA,CAAAC,MAAM,GAAN,UAAOC,KAAa;IAClB,IAAI,CAACN,QAAQ,GAAGM,KAAK;IACrB,IAAI,CAACL,eAAe,GAAGH,MAAM,EAAE;EACjC,CAAC;EAEDC,mBAAA,CAAAK,SAAA,CAAAG,OAAO,GAAP;IACE,OAAO;MACLD,KAAK,EAAE,IAAI,CAACN,QAAQ;MACpBQ,SAAS,EAAE,IAAI,CAACP;KACjB;EACH,CAAC;EACH,OAAAF,mBAAC;AAAD,CAAC,CAhBD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}