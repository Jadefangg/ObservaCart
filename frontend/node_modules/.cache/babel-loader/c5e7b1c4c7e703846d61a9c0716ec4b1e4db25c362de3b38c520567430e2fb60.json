{"ast":null,"code":"import { WebSDK } from '@opentelemetry/web';\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-otlp-http';\n\n// Create OTLP exporter for sending traces\nconst traceExporter = new OTLPTraceExporter({\n  url: 'http://localhost:4318/v1/traces' // OpenTelemetry Collector HTTP endpoint\n});\n\n// Initialize the Web SDK\nconst sdk = new WebSDK({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: 'observacart-frontend',\n    [SemanticResourceAttributes.SERVICE_VERSION]: '1.0.0',\n    [SemanticResourceAttributes.SERVICE_INSTANCE_ID]: 'frontend-instance-1'\n  }),\n  traceExporter,\n  instrumentations: [new FetchInstrumentation({\n    propagateTraceHeaderCorsUrls: [/^https?:\\/\\/localhost/]\n  }), new XMLHttpRequestInstrumentation({\n    propagateTraceHeaderCorsUrls: [/^https?:\\/\\/localhost/]\n  })]\n});\n\n// Start the SDK\nsdk.start().then(() => console.log('üîç OpenTelemetry started successfully - ObservaCart Frontend instrumented!')).catch(error => console.log('‚ùå Error initializing OpenTelemetry', error));\nexport default sdk;","map":{"version":3,"names":["WebSDK","FetchInstrumentation","XMLHttpRequestInstrumentation","Resource","SemanticResourceAttributes","OTLPTraceExporter","traceExporter","url","sdk","resource","SERVICE_NAME","SERVICE_VERSION","SERVICE_INSTANCE_ID","instrumentations","propagateTraceHeaderCorsUrls","start","then","console","log","catch","error"],"sources":["C:/Users/Sartaj/Desktop/ObservaCart/observacart/frontend/src/observability.js"],"sourcesContent":["import { WebSDK } from '@opentelemetry/web';\r\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\r\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\r\nimport { Resource } from '@opentelemetry/resources';\r\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\r\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-otlp-http';\r\n\r\n// Create OTLP exporter for sending traces\r\nconst traceExporter = new OTLPTraceExporter({\r\n  url: 'http://localhost:4318/v1/traces', // OpenTelemetry Collector HTTP endpoint\r\n});\r\n\r\n// Initialize the Web SDK\r\nconst sdk = new WebSDK({\r\n  resource: new Resource({\r\n    [SemanticResourceAttributes.SERVICE_NAME]: 'observacart-frontend',\r\n    [SemanticResourceAttributes.SERVICE_VERSION]: '1.0.0',\r\n    [SemanticResourceAttributes.SERVICE_INSTANCE_ID]: 'frontend-instance-1',\r\n  }),\r\n  traceExporter,\r\n  instrumentations: [\r\n    new FetchInstrumentation({\r\n      propagateTraceHeaderCorsUrls: [\r\n        /^https?:\\/\\/localhost/,\r\n      ],\r\n    }),\r\n    new XMLHttpRequestInstrumentation({\r\n      propagateTraceHeaderCorsUrls: [\r\n        /^https?:\\/\\/localhost/,\r\n      ],\r\n    }),\r\n  ],\r\n});\r\n\r\n// Start the SDK\r\nsdk.start()\r\n  .then(() => console.log('üîç OpenTelemetry started successfully - ObservaCart Frontend instrumented!'))\r\n  .catch((error) => console.log('‚ùå Error initializing OpenTelemetry', error));\r\n\r\nexport default sdk;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,oBAAoB,QAAQ,sCAAsC;AAC3E,SAASC,6BAA6B,QAAQ,iDAAiD;AAC/F,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,0BAA0B,QAAQ,qCAAqC;AAChF,SAASC,iBAAiB,QAAQ,mCAAmC;;AAErE;AACA,MAAMC,aAAa,GAAG,IAAID,iBAAiB,CAAC;EAC1CE,GAAG,EAAE,iCAAiC,CAAE;AAC1C,CAAC,CAAC;;AAEF;AACA,MAAMC,GAAG,GAAG,IAAIR,MAAM,CAAC;EACrBS,QAAQ,EAAE,IAAIN,QAAQ,CAAC;IACrB,CAACC,0BAA0B,CAACM,YAAY,GAAG,sBAAsB;IACjE,CAACN,0BAA0B,CAACO,eAAe,GAAG,OAAO;IACrD,CAACP,0BAA0B,CAACQ,mBAAmB,GAAG;EACpD,CAAC,CAAC;EACFN,aAAa;EACbO,gBAAgB,EAAE,CAChB,IAAIZ,oBAAoB,CAAC;IACvBa,4BAA4B,EAAE,CAC5B,uBAAuB;EAE3B,CAAC,CAAC,EACF,IAAIZ,6BAA6B,CAAC;IAChCY,4BAA4B,EAAE,CAC5B,uBAAuB;EAE3B,CAAC,CAAC;AAEN,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,KAAK,CAAC,CAAC,CACRC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,4EAA4E,CAAC,CAAC,CACrGC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEE,KAAK,CAAC,CAAC;AAE7E,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}