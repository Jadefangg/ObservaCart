{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = ['OTEL_BSP_EXPORT_TIMEOUT', 'OTEL_BSP_MAX_EXPORT_BATCH_SIZE', 'OTEL_BSP_MAX_QUEUE_SIZE', 'OTEL_BSP_SCHEDULE_DELAY', 'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT', 'OTEL_ATTRIBUTE_COUNT_LIMIT', 'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT', 'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT', 'OTEL_SPAN_EVENT_COUNT_LIMIT', 'OTEL_SPAN_LINK_COUNT_LIMIT'];\nfunction isEnvVarANumber(key) {\n  return ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1;\n}\nvar ENVIRONMENT_LISTS_KEYS = ['OTEL_NO_PATCH_MODULES', 'OTEL_PROPAGATORS'];\nfunction isEnvVarAList(key) {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_TRACES_EXPORTER: 'none',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: ''\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n  if (min === void 0) {\n    min = -Infinity;\n  }\n  if (max === void 0) {\n    max = Infinity;\n  }\n  if (typeof values[name] !== 'undefined') {\n    var value = Number(values[name]);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n  if (separator === void 0) {\n    separator = DEFAULT_LIST_SEPARATOR;\n  }\n  var givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(function (v) {\n      return v.trim();\n    });\n  }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n  var value = values[key];\n  if (typeof value === 'string') {\n    var theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n  var environment = {};\n  for (var env in DEFAULT_ENVIRONMENT) {\n    var key = env;\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n      default:\n        if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          var value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n  return environment;\n}","map":{"version":3,"names":["DiagLogLevel","TracesSamplerValues","DEFAULT_LIST_SEPARATOR","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","key","indexOf","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","Infinity","DEFAULT_ATTRIBUTE_COUNT_LIMIT","DEFAULT_ENVIRONMENT","CONTAINER_NAME","ECS_CONTAINER_METADATA_URI_V4","ECS_CONTAINER_METADATA_URI","HOSTNAME","KUBERNETES_SERVICE_HOST","NAMESPACE","OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_EXPORTER_JAEGER_AGENT_HOST","OTEL_EXPORTER_JAEGER_ENDPOINT","OTEL_EXPORTER_JAEGER_PASSWORD","OTEL_EXPORTER_JAEGER_USER","OTEL_EXPORTER_OTLP_ENDPOINT","OTEL_EXPORTER_OTLP_TRACES_ENDPOINT","OTEL_EXPORTER_OTLP_METRICS_ENDPOINT","OTEL_EXPORTER_OTLP_HEADERS","OTEL_EXPORTER_OTLP_TRACES_HEADERS","OTEL_EXPORTER_OTLP_METRICS_HEADERS","OTEL_EXPORTER_ZIPKIN_ENDPOINT","OTEL_LOG_LEVEL","INFO","OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS","OTEL_RESOURCE_ATTRIBUTES","OTEL_SERVICE_NAME","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_TRACES_EXPORTER","OTEL_TRACES_SAMPLER","ParentBasedAlwaysOn","OTEL_TRACES_SAMPLER_ARG","parseNumber","name","environment","values","min","max","value","Number","isNaN","parseStringList","output","input","separator","givenValue","split","map","v","trim","logLevelMap","ALL","VERBOSE","DEBUG","WARN","ERROR","NONE","setLogLevelFromEnv","theLevel","toUpperCase","parseEnvironment","env","String"],"sources":["../../../src/utils/environment.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}