{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, TraceFlags } from '@opentelemetry/api';\nimport { ExportResultCode, globalErrorHandler, suppressTracing } from '@opentelemetry/core';\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nvar SimpleSpanProcessor = /** @class */function () {\n  function SimpleSpanProcessor(_exporter) {\n    this._exporter = _exporter;\n    this._isShutdown = false;\n    this._shuttingDownPromise = Promise.resolve();\n  }\n  SimpleSpanProcessor.prototype.forceFlush = function () {\n    // do nothing as all spans are being exported without waiting\n    return Promise.resolve();\n  };\n  // does nothing.\n  SimpleSpanProcessor.prototype.onStart = function (_span) {};\n  SimpleSpanProcessor.prototype.onEnd = function (span) {\n    var _this = this;\n    if (this._isShutdown) {\n      return;\n    }\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), function () {\n      _this._exporter.export([span], function (result) {\n        var _a;\n        if (result.code !== ExportResultCode.SUCCESS) {\n          globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(\"SimpleSpanProcessor: span export failed (status \" + result + \")\"));\n        }\n      });\n    });\n  };\n  SimpleSpanProcessor.prototype.shutdown = function () {\n    var _this = this;\n    if (this._isShutdown) {\n      return this._shuttingDownPromise;\n    }\n    this._isShutdown = true;\n    this._shuttingDownPromise = new Promise(function (resolve, reject) {\n      Promise.resolve().then(function () {\n        return _this._exporter.shutdown();\n      }).then(resolve).catch(function (e) {\n        reject(e);\n      });\n    });\n    return this._shuttingDownPromise;\n  };\n  return SimpleSpanProcessor;\n}();\nexport { SimpleSpanProcessor };","map":{"version":3,"names":["context","TraceFlags","ExportResultCode","globalErrorHandler","suppressTracing","SimpleSpanProcessor","_exporter","_isShutdown","_shuttingDownPromise","Promise","resolve","prototype","forceFlush","onStart","_span","onEnd","span","_this","spanContext","traceFlags","SAMPLED","with","active","export","result","code","SUCCESS","_a","error","Error","shutdown","reject","then","catch","e"],"sources":["../../../src/export/SimpleSpanProcessor.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACxD,SACEC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,QACV,qBAAqB;AAM5B;;;;;;AAMA,IAAAC,mBAAA;EACE,SAAAA,oBAA6BC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;IAE9B,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,oBAAoB,GAAkBC,OAAO,CAACC,OAAO,EAAE;EAHR;EAKvDL,mBAAA,CAAAM,SAAA,CAAAC,UAAU,GAAV;IACE;IACA,OAAOH,OAAO,CAACC,OAAO,EAAE;EAC1B,CAAC;EAED;EACAL,mBAAA,CAAAM,SAAA,CAAAE,OAAO,GAAP,UAAQC,KAAW,GAAS,CAAC;EAE7BT,mBAAA,CAAAM,SAAA,CAAAI,KAAK,GAAL,UAAMC,IAAkB;IAAxB,IAAAC,KAAA;IACE,IAAI,IAAI,CAACV,WAAW,EAAE;MACpB;;IAGF,IAAI,CAACS,IAAI,CAACE,WAAW,EAAE,CAACC,UAAU,GAAGlB,UAAU,CAACmB,OAAO,MAAM,CAAC,EAAE;MAC9D;;IAGF;IACApB,OAAO,CAACqB,IAAI,CAACjB,eAAe,CAACJ,OAAO,CAACsB,MAAM,EAAE,CAAC,EAAE;MAC9CL,KAAI,CAACX,SAAS,CAACiB,MAAM,CAAC,CAACP,IAAI,CAAC,EAAE,UAAAQ,MAAM;;QAClC,IAAIA,MAAM,CAACC,IAAI,KAAKvB,gBAAgB,CAACwB,OAAO,EAAE;UAC5CvB,kBAAkB,CAChB,CAAAwB,EAAA,GAAAH,MAAM,CAACI,KAAK,cAAAD,EAAA,cAAAA,EAAA,GACV,IAAIE,KAAK,CACP,qDAAmDL,MAAM,MAAG,CAC7D,CACJ;;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAEDnB,mBAAA,CAAAM,SAAA,CAAAmB,QAAQ,GAAR;IAAA,IAAAb,KAAA;IACE,IAAI,IAAI,CAACV,WAAW,EAAE;MACpB,OAAO,IAAI,CAACC,oBAAoB;;IAElC,IAAI,CAACD,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,oBAAoB,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEqB,MAAM;MACtDtB,OAAO,CAACC,OAAO,EAAE,CACdsB,IAAI,CAAC;QACJ,OAAOf,KAAI,CAACX,SAAS,CAACwB,QAAQ,EAAE;MAClC,CAAC,CAAC,CACDE,IAAI,CAACtB,OAAO,CAAC,CACbuB,KAAK,CAAC,UAAAC,CAAC;QACNH,MAAM,CAACG,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI,CAAC1B,oBAAoB;EAClC,CAAC;EACH,OAAAH,mBAAC;AAAD,CAAC,CAvDD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}