{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sartaj\\\\Desktop\\\\ObservaCart\\\\observacart\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { userService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'REGISTER_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'REGISTER_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: null\n      };\n    case 'REGISTER_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: false,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing auth on mount\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const user = userService.getCurrentUser();\n    if (token && user) {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n    }\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await userService.login(credentials);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.user,\n          token: response.token\n        }\n      });\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'REGISTER_START'\n    });\n    try {\n      const response = await userService.register(userData);\n      dispatch({\n        type: 'REGISTER_SUCCESS'\n      });\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'REGISTER_FAILURE',\n        payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    userService.logout();\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","userService","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","token","initialState","AuthProvider","children","_s","dispatch","localStorage","getItem","getCurrentUser","login","credentials","response","_error$response","_error$response$data","data","message","register","userData","_error$response2","_error$response2$data","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Sartaj/Desktop/ObservaCart/observacart/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { userService } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: null,\r\n      };\r\n    case 'REGISTER_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'REGISTER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'REGISTER_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing auth on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    const user = userService.getCurrentUser();\r\n    \r\n    if (token && user) {\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await userService.login(credentials);\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: {\r\n          user: response.user,\r\n          token: response.token,\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: error.response?.data?.message || 'Login failed',\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'REGISTER_START' });\r\n    try {\r\n      const response = await userService.register(userData);\r\n      dispatch({ type: 'REGISTER_SUCCESS' });\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'REGISTER_FAILURE',\r\n        payload: error.response?.data?.message || 'Registration failed',\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    userService.logout();\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}