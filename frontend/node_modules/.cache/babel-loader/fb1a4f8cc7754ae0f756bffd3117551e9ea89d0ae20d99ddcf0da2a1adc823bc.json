{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture {\n  _callback;\n  _that;\n  _isCalled = false;\n  _deferred = new Deferred();\n  constructor(_callback, _that) {\n    this._callback = _callback;\n    this._that = _that;\n  }\n  get isCalled() {\n    return this._isCalled;\n  }\n  get promise() {\n    return this._deferred.promise;\n  }\n  call(...args) {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(val => this._deferred.resolve(val), err => this._deferred.reject(err));\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}","map":{"version":3,"names":["Deferred","BindOnceFuture","_callback","_that","_isCalled","_deferred","constructor","isCalled","promise","call","args","Promise","resolve","then","val","err","reject"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-trace-base\\node_modules\\@opentelemetry\\core\\src\\utils\\callback.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,QAAQ,QAAQ,WAAW;AAEpC;;;AAGA,OAAM,MAAOC,cAAc;EAQfC,SAAA;EACAC,KAAA;EAJFC,SAAS,GAAG,KAAK;EACjBC,SAAS,GAAG,IAAIL,QAAQ,EAAK;EACrCM,YACUJ,SAAY,EACZC,KAAW;IADX,KAAAD,SAAS,GAATA,SAAS;IACT,KAAAC,KAAK,GAALA,KAAK;EACZ;EAEH,IAAII,QAAQA,CAAA;IACV,OAAO,IAAI,CAACH,SAAS;EACvB;EAEA,IAAII,OAAOA,CAAA;IACT,OAAO,IAAI,CAACH,SAAS,CAACG,OAAO;EAC/B;EAEAC,IAAIA,CAAC,GAAGC,IAAmB;IACzB,IAAI,CAAC,IAAI,CAACN,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,GAAG,IAAI;MACrB,IAAI;QACFO,OAAO,CAACC,OAAO,CAAC,IAAI,CAACV,SAAS,CAACO,IAAI,CAAC,IAAI,CAACN,KAAK,EAAE,GAAGO,IAAI,CAAC,CAAC,CAACG,IAAI,CAC5DC,GAAG,IAAI,IAAI,CAACT,SAAS,CAACO,OAAO,CAACE,GAAG,CAAC,EAClCC,GAAG,IAAI,IAAI,CAACV,SAAS,CAACW,MAAM,CAACD,GAAG,CAAC,CAClC;OACF,CAAC,OAAOA,GAAG,EAAE;QACZ,IAAI,CAACV,SAAS,CAACW,MAAM,CAACD,GAAG,CAAC;;;IAG9B,OAAO,IAAI,CAACV,SAAS,CAACG,OAAO;EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}