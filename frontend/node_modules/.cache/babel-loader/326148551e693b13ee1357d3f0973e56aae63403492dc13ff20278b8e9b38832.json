{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Type guard to remove nulls from arrays\n *\n * @param value value to be checked for null equality\n */\nexport function notNull(value) {\n  return value !== null;\n}\n/**\n * Converting the unordered labels into unique identifier string.\n * @param labels user provided unordered Labels.\n */\nexport function hashLabels(labels) {\n  var keys = Object.keys(labels);\n  if (keys.length === 0) return '';\n  keys = keys.sort();\n  return keys.reduce(function (result, key) {\n    if (result.length > 2) {\n      result += ',';\n    }\n    return result += key + ':' + labels[key];\n  }, '|#');\n}","map":{"version":3,"names":["notNull","value","hashLabels","labels","keys","Object","length","sort","reduce","result","key"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\Utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Labels } from '@opentelemetry/api-metrics';\n\n/**\n * Type guard to remove nulls from arrays\n *\n * @param value value to be checked for null equality\n */\nexport function notNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\n/**\n * Converting the unordered labels into unique identifier string.\n * @param labels user provided unordered Labels.\n */\nexport function hashLabels(labels: Labels): string {\n  let keys = Object.keys(labels);\n  if (keys.length === 0) return '';\n\n  keys = keys.sort();\n  return keys.reduce((result, key) => {\n    if (result.length > 2) {\n      result += ',';\n    }\n    return (result += key + ':' + labels[key]);\n  }, '|#');\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA;;;;;AAKA,OAAM,SAAUA,OAAOA,CAAIC,KAAe;EACxC,OAAOA,KAAK,KAAK,IAAI;AACvB;AAEA;;;;AAIA,OAAM,SAAUC,UAAUA,CAACC,MAAc;EACvC,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,MAAM,CAAC;EAC9B,IAAIC,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;EAEhCF,IAAI,GAAGA,IAAI,CAACG,IAAI,EAAE;EAClB,OAAOH,IAAI,CAACI,MAAM,CAAC,UAACC,MAAM,EAAEC,GAAG;IAC7B,IAAID,MAAM,CAACH,MAAM,GAAG,CAAC,EAAE;MACrBG,MAAM,IAAI,GAAG;;IAEf,OAAQA,MAAM,IAAIC,GAAG,GAAG,GAAG,GAAGP,MAAM,CAACO,GAAG,CAAC;EAC3C,CAAC,EAAE,IAAI,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}