{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace, context, propagation, diag } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from '.';\nimport { DEFAULT_CONFIG } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nvar merge = require('lodash.merge');\nimport { BatchSpanProcessor } from './platform';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n  ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n  ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n  ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n  ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */function () {\n  function BasicTracerProvider(config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var _a;\n    this._registeredSpanProcessors = [];\n    this._tracers = new Map();\n    var mergedConfig = merge({}, DEFAULT_CONFIG, config);\n    this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n    this.resource = Resource.default().merge(this.resource);\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource\n    });\n    var defaultExporter = this._buildExporterFromEnv();\n    if (defaultExporter !== undefined) {\n      var batchProcessor = new BatchSpanProcessor(defaultExporter);\n      this.activeSpanProcessor = batchProcessor;\n    } else {\n      this.activeSpanProcessor = new NoopSpanProcessor();\n    }\n  }\n  BasicTracerProvider.prototype.getTracer = function (name, version) {\n    var key = name + \"@\" + (version || '');\n    if (!this._tracers.has(key)) {\n      this._tracers.set(key, new Tracer({\n        name: name,\n        version: version\n      }, this._config, this));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key);\n  };\n  /**\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor.shutdown().catch(function (err) {\n        return diag.error('Error while trying to shutdown current span processor', err);\n      });\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n  };\n  BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n    return this.activeSpanProcessor;\n  };\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  BasicTracerProvider.prototype.register = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  };\n  BasicTracerProvider.prototype.forceFlush = function () {\n    var timeout = this._config.forceFlushTimeoutMillis;\n    var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n      return new Promise(function (resolve) {\n        var state;\n        var timeoutInterval = setTimeout(function () {\n          resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n          state = ForceFlushState.timeout;\n        }, timeout);\n        spanProcessor.forceFlush().then(function () {\n          clearTimeout(timeoutInterval);\n          if (state !== ForceFlushState.timeout) {\n            state = ForceFlushState.resolved;\n            resolve(state);\n          }\n        }).catch(function (error) {\n          clearTimeout(timeoutInterval);\n          state = ForceFlushState.error;\n          resolve(error);\n        });\n      });\n    });\n    return new Promise(function (resolve, reject) {\n      Promise.all(promises).then(function (results) {\n        var errors = results.filter(function (result) {\n          return result !== ForceFlushState.resolved;\n        });\n        if (errors.length > 0) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      }).catch(function (error) {\n        return reject([error]);\n      });\n    });\n  };\n  BasicTracerProvider.prototype.shutdown = function () {\n    return this.activeSpanProcessor.shutdown();\n  };\n  BasicTracerProvider.prototype._getPropagator = function (name) {\n    var _a;\n    return (_a = BasicTracerProvider._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n  };\n  BasicTracerProvider.prototype._getSpanExporter = function (name) {\n    var _a;\n    return (_a = BasicTracerProvider._registeredExporters.get(name)) === null || _a === void 0 ? void 0 : _a();\n  };\n  BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n    var _this = this;\n    // per spec, propagators from env must be deduplicated\n    var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n    var propagators = uniquePropagatorNames.map(function (name) {\n      var propagator = _this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n      }\n      return propagator;\n    });\n    var validPropagators = propagators.reduce(function (list, item) {\n      if (item) {\n        list.push(item);\n      }\n      return list;\n    }, []);\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators\n      });\n    }\n  };\n  BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n    var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none') return;\n    var exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n    }\n    return exporter;\n  };\n  BasicTracerProvider._registeredPropagators = new Map([['tracecontext', function () {\n    return new W3CTraceContextPropagator();\n  }], ['baggage', function () {\n    return new W3CBaggagePropagator();\n  }]]);\n  BasicTracerProvider._registeredExporters = new Map();\n  return BasicTracerProvider;\n}();\nexport { BasicTracerProvider };","map":{"version":3,"names":["trace","context","propagation","diag","CompositePropagator","W3CBaggagePropagator","W3CTraceContextPropagator","getEnv","Resource","Tracer","DEFAULT_CONFIG","MultiSpanProcessor","NoopSpanProcessor","merge","require","BatchSpanProcessor","ForceFlushState","BasicTracerProvider","config","_registeredSpanProcessors","_tracers","Map","mergedConfig","resource","_a","empty","default","_config","Object","assign","defaultExporter","_buildExporterFromEnv","undefined","batchProcessor","activeSpanProcessor","prototype","getTracer","name","version","key","has","set","get","addSpanProcessor","spanProcessor","length","shutdown","catch","err","error","push","getActiveSpanProcessor","register","setGlobalTracerProvider","propagator","_buildPropagatorFromEnv","contextManager","setGlobalContextManager","setGlobalPropagator","forceFlush","timeout","forceFlushTimeoutMillis","promises","map","Promise","resolve","state","timeoutInterval","setTimeout","Error","then","clearTimeout","resolved","reject","all","results","errors","filter","result","_getPropagator","_registeredPropagators","_getSpanExporter","_registeredExporters","_this","uniquePropagatorNames","Array","from","Set","OTEL_PROPAGATORS","propagators","warn","validPropagators","reduce","list","item","exporterName","OTEL_TRACES_EXPORTER","exporter"],"sources":["../../src/BasicTracerProvider.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}