{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class InstrumentationNodeModuleDefinition {\n  name;\n  supportedVersions;\n  patch;\n  unpatch;\n  files;\n  constructor(name, supportedVersions,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  patch,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  unpatch, files) {\n    this.name = name;\n    this.supportedVersions = supportedVersions;\n    this.patch = patch;\n    this.unpatch = unpatch;\n    this.files = files || [];\n  }\n}","map":{"version":3,"names":["InstrumentationNodeModuleDefinition","name","supportedVersions","patch","unpatch","files","constructor"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\instrumentation\\src\\instrumentationNodeModuleDefinition.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  InstrumentationModuleDefinition,\n  InstrumentationModuleFile,\n} from './types';\n\nexport class InstrumentationNodeModuleDefinition\n  implements InstrumentationModuleDefinition\n{\n  files: InstrumentationModuleFile[];\n  constructor(\n    public name: string,\n    public supportedVersions: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public patch?: (exports: any, moduleVersion?: string) => any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public unpatch?: (exports: any, moduleVersion?: string) => void,\n    files?: InstrumentationModuleFile[]\n  ) {\n    this.files = files || [];\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAqBA,OAAM,MAAOA,mCAAmC;EAKrCC,IAAA;EACAC,iBAAA;EAEAC,KAAA;EAEAC,OAAA;EAPTC,KAAK;EACLC,YACSL,IAAY,EACZC,iBAA2B;EAClC;EACOC,KAAqD;EAC5D;EACOC,OAAwD,EAC/DC,KAAmC;IAN5B,KAAAJ,IAAI,GAAJA,IAAI;IACJ,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAEjB,KAAAC,KAAK,GAALA,KAAK;IAEL,KAAAC,OAAO,GAAPA,OAAO;IAGd,IAAI,CAACC,KAAK,GAAGA,KAAK,IAAI,EAAE;EAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}