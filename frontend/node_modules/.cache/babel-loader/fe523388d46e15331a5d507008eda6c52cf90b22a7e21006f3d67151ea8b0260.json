{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { RandomIdGenerator, sanitizeAttributes, isTracingSuppressed } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */function () {\n  /**\n   * Constructs a new Tracer instance.\n   */\n  function Tracer(instrumentationLibrary, config, _tracerProvider) {\n    this._tracerProvider = _tracerProvider;\n    var localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  Tracer.prototype.startSpan = function (name, options, context) {\n    var _a, _b;\n    if (options === void 0) {\n      options = {};\n    }\n    if (context === void 0) {\n      context = api.context.active();\n    }\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n    }\n    var parentContext = getParent(options, context);\n    var spanId = this._idGenerator.generateSpanId();\n    var traceId;\n    var traceState;\n    var parentSpanId;\n    if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentContext.traceId;\n      traceState = parentContext.traceState;\n      parentSpanId = parentContext.spanId;\n    }\n    var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n    var links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n    var attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    var samplingResult = this._sampler.shouldSample(options.root ? api.trace.setSpanContext(context, api.INVALID_SPAN_CONTEXT) : context, traceId, name, spanKind, attributes, links);\n    var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED ? api.TraceFlags.SAMPLED : api.TraceFlags.NONE;\n    var spanContext = {\n      traceId: traceId,\n      spanId: spanId,\n      traceFlags: traceFlags,\n      traceState: traceState\n    };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug('Recording is off, propagating context in a non-recording span');\n      return api.trace.wrapSpanContext(spanContext);\n    }\n    var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n    // Set default attributes\n    span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n    return span;\n  };\n  Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n    var opts;\n    var ctx;\n    var fn;\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2;\n    } else if (arguments.length === 3) {\n      opts = arg2;\n      fn = arg3;\n    } else {\n      opts = arg2;\n      ctx = arg3;\n      fn = arg4;\n    }\n    var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n    var span = this.startSpan(name, opts, parentContext);\n    var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  };\n  /** Returns the active {@link SpanLimits}. */\n  Tracer.prototype.getSpanLimits = function () {\n    return this._spanLimits;\n  };\n  Tracer.prototype.getActiveSpanProcessor = function () {\n    return this._tracerProvider.getActiveSpanProcessor();\n  };\n  return Tracer;\n}();\nexport { Tracer };\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n  if (options.root) return undefined;\n  return api.trace.getSpanContext(context);\n}","map":{"version":3,"names":["api","RandomIdGenerator","sanitizeAttributes","isTracingSuppressed","Span","mergeConfig","Tracer","instrumentationLibrary","config","_tracerProvider","localConfig","_sampler","sampler","_spanLimits","spanLimits","_idGenerator","idGenerator","resource","prototype","startSpan","name","options","context","active","diag","debug","trace","wrapSpanContext","INVALID_SPAN_CONTEXT","parentContext","getParent","spanId","generateSpanId","traceId","traceState","parentSpanId","isSpanContextValid","generateTraceId","spanKind","_a","kind","SpanKind","INTERNAL","links","_b","attributes","samplingResult","shouldSample","root","setSpanContext","traceFlags","decision","SamplingDecision","RECORD_AND_SAMPLED","TraceFlags","SAMPLED","NONE","spanContext","NOT_RECORD","span","startTime","setAttributes","Object","assign","startActiveSpan","arg2","arg3","arg4","opts","ctx","fn","arguments","length","contextWithSpanSet","setSpan","with","undefined","getSpanLimits","getActiveSpanProcessor","getSpanContext"],"sources":["../../src/Tracer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}