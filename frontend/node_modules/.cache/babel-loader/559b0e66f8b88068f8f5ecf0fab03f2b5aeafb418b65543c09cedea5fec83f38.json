{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AggregatorKind } from '../types';\nimport { hrTime } from '@opentelemetry/core';\n/** Basic aggregator which calculates a Sum from individual measurements. */\nvar SumAggregator = /** @class */function () {\n  function SumAggregator() {\n    this.kind = AggregatorKind.SUM;\n    this._current = 0;\n    this._lastUpdateTime = [0, 0];\n  }\n  SumAggregator.prototype.update = function (value) {\n    this._current += value;\n    this._lastUpdateTime = hrTime();\n  };\n  SumAggregator.prototype.toPoint = function () {\n    return {\n      value: this._current,\n      timestamp: this._lastUpdateTime\n    };\n  };\n  return SumAggregator;\n}();\nexport { SumAggregator };","map":{"version":3,"names":["AggregatorKind","hrTime","SumAggregator","kind","SUM","_current","_lastUpdateTime","prototype","update","value","toPoint","timestamp"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-metrics-base\\src\\export\\aggregators\\Sum.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Point, Sum, AggregatorKind, SumAggregatorType } from '../types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hrTime } from '@opentelemetry/core';\n\n/** Basic aggregator which calculates a Sum from individual measurements. */\nexport class SumAggregator implements SumAggregatorType {\n  public kind: AggregatorKind.SUM = AggregatorKind.SUM;\n  private _current: number = 0;\n  private _lastUpdateTime: HrTime = [0, 0];\n\n  update(value: number): void {\n    this._current += value;\n    this._lastUpdateTime = hrTime();\n  }\n\n  toPoint(): Point<Sum> {\n    return {\n      value: this._current,\n      timestamp: this._lastUpdateTime,\n    };\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAAqBA,cAAc,QAA2B,UAAU;AAExE,SAASC,MAAM,QAAQ,qBAAqB;AAE5C;AACA,IAAAC,aAAA;EAAA,SAAAA,cAAA;IACS,KAAAC,IAAI,GAAuBH,cAAc,CAACI,GAAG;IAC5C,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,eAAe,GAAW,CAAC,CAAC,EAAE,CAAC,CAAC;EAa1C;EAXEJ,aAAA,CAAAK,SAAA,CAAAC,MAAM,GAAN,UAAOC,KAAa;IAClB,IAAI,CAACJ,QAAQ,IAAII,KAAK;IACtB,IAAI,CAACH,eAAe,GAAGL,MAAM,EAAE;EACjC,CAAC;EAEDC,aAAA,CAAAK,SAAA,CAAAG,OAAO,GAAP;IACE,OAAO;MACLD,KAAK,EAAE,IAAI,CAACJ,QAAQ;MACpBM,SAAS,EAAE,IAAI,CAACL;KACjB;EACH,CAAC;EACH,OAAAJ,aAAC;AAAD,CAAC,CAhBD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}