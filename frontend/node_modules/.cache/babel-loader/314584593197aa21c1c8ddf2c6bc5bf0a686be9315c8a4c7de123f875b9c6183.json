{"ast":null,"code":"export function sanitizeAttributes(attributes) {\n  var out = {};\n  if (attributes == null || typeof attributes !== 'object') {\n    return out;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n    var _b = _a[_i],\n      k = _b[0],\n      v = _b[1];\n    if (isAttributeValue(v)) {\n      if (Array.isArray(v)) {\n        out[k] = v.slice();\n      } else {\n        out[k] = v;\n      }\n    }\n  }\n  return out;\n}\nexport function isAttributeValue(val) {\n  if (val == null) {\n    return true;\n  }\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n  return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n  var type;\n  for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n    var element = arr_1[_i];\n    // null/undefined elements are allowed\n    if (element == null) continue;\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n    if (typeof element === type) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n  switch (typeof val) {\n    case 'number':\n      return true;\n    case 'boolean':\n      return true;\n    case 'string':\n      return true;\n  }\n  return false;\n}","map":{"version":3,"names":["sanitizeAttributes","attributes","out","_i","_a","Object","entries","length","_b","k","v","isAttributeValue","Array","isArray","slice","val","isHomogeneousAttributeValueArray","isValidPrimitiveAttributeValue","arr","type","arr_1","element"],"sources":["../../../src/common/attributes.ts"],"sourcesContent":[null],"mappings":"AAiBA,OAAM,SAAUA,kBAAkBA,CAACC,UAAmB;EACpD,IAAMC,GAAG,GAAmB,EAAE;EAE9B,IAAID,UAAU,IAAI,IAAI,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IACxD,OAAOC,GAAG;;EAGZ;EACA,KAAqB,IAAAC,EAAA,IAA2B,EAA3BC,EAAA,GAAAC,MAAM,CAACC,OAAO,CAACL,UAAW,CAAC,EAA3BE,EAAA,GAAAC,EAAA,CAAAG,MAA2B,EAA3BJ,EAAA,EAA2B,EAAE;IAAvC,IAAAK,EAAA,GAAAJ,EAAA,CAAAD,EAAA,CAAM;MAALM,CAAC,GAAAD,EAAA;MAAEE,CAAC,GAAAF,EAAA;IACd,IAAIG,gBAAgB,CAACD,CAAC,CAAC,EAAE;MACvB,IAAIE,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,EAAE;QACpBR,GAAG,CAACO,CAAC,CAAC,GAAGC,CAAC,CAACI,KAAK,EAAE;OACnB,MAAM;QACLZ,GAAG,CAACO,CAAC,CAAC,GAAGC,CAAC;;;;EAKhB,OAAOR,GAAG;AACZ;AAEA,OAAM,SAAUS,gBAAgBA,CAACI,GAAY;EAC3C,IAAIA,GAAG,IAAI,IAAI,EAAE;IACf,OAAO,IAAI;;EAGb,IAAIH,KAAK,CAACC,OAAO,CAACE,GAAG,CAAC,EAAE;IACtB,OAAOC,gCAAgC,CAACD,GAAG,CAAC;;EAG9C,OAAOE,8BAA8B,CAACF,GAAG,CAAC;AAC5C;AAEA,SAASC,gCAAgCA,CAACE,GAAc;EACtD,IAAIC,IAAwB;EAE5B,KAAsB,IAAAhB,EAAA,IAAG,EAAHiB,KAAA,GAAAF,GAAG,EAAHf,EAAA,GAAAiB,KAAA,CAAAb,MAAG,EAAHJ,EAAA,EAAG,EAAE;IAAtB,IAAMkB,OAAO,GAAAD,KAAA,CAAAjB,EAAA;IAChB;IACA,IAAIkB,OAAO,IAAI,IAAI,EAAE;IAErB,IAAI,CAACF,IAAI,EAAE;MACT,IAAIF,8BAA8B,CAACI,OAAO,CAAC,EAAE;QAC3CF,IAAI,GAAG,OAAOE,OAAO;QACrB;;MAEF;MACA,OAAO,KAAK;;IAGd,IAAI,OAAOA,OAAO,KAAKF,IAAI,EAAE;MAC3B;;IAGF,OAAO,KAAK;;EAGd,OAAO,IAAI;AACb;AAEA,SAASF,8BAA8BA,CAACF,GAAY;EAClD,QAAQ,OAAOA,GAAG;IAChB,KAAK,QAAQ;MACX,OAAO,IAAI;IACb,KAAK,SAAS;MACZ,OAAO,IAAI;IACb,KAAK,QAAQ;MACX,OAAO,IAAI;;EAGf,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}