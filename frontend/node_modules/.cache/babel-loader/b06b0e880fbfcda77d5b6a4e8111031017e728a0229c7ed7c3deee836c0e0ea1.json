{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { globalErrorHandler } from '@opentelemetry/core';\nexport class BatchSpanProcessor extends BatchSpanProcessorBase {\n  _visibilityChangeListener;\n  _pageHideListener;\n  constructor(_exporter, config) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n  onInit(config) {\n    if (config?.disableAutoFlushOnDocumentHide !== true && typeof document !== 'undefined') {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          this.forceFlush().catch(error => {\n            globalErrorHandler(error);\n          });\n        }\n      };\n      this._pageHideListener = () => {\n        this.forceFlush().catch(error => {\n          globalErrorHandler(error);\n        });\n      };\n      document.addEventListener('visibilitychange', this._visibilityChangeListener);\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n  onShutdown() {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}","map":{"version":3,"names":["BatchSpanProcessorBase","globalErrorHandler","BatchSpanProcessor","_visibilityChangeListener","_pageHideListener","constructor","_exporter","config","onInit","disableAutoFlushOnDocumentHide","document","visibilityState","forceFlush","catch","error","addEventListener","onShutdown","removeEventListener"],"sources":["C:\\Users\\Sartaj\\Desktop\\ObservaCart\\observacart\\frontend\\node_modules\\@opentelemetry\\sdk-trace-web\\node_modules\\@opentelemetry\\sdk-trace-base\\src\\platform\\browser\\export\\BatchSpanProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\nimport { globalErrorHandler } from '@opentelemetry/core';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(\n    _exporter: SpanExporter,\n    config?: BatchSpanProcessorBrowserConfig\n  ) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (\n      config?.disableAutoFlushOnDocumentHide !== true &&\n      typeof document !== 'undefined'\n    ) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          this.forceFlush().catch(error => {\n            globalErrorHandler(error);\n          });\n        }\n      };\n      this._pageHideListener = () => {\n        this.forceFlush().catch(error => {\n          globalErrorHandler(error);\n        });\n      };\n      document.addEventListener(\n        'visibilitychange',\n        this._visibilityChangeListener\n      );\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener(\n          'visibilitychange',\n          this._visibilityChangeListener\n        );\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,sBAAsB,QAAQ,wCAAwC;AAG/E,SAASC,kBAAkB,QAAQ,qBAAqB;AAExD,OAAM,MAAOC,kBAAmB,SAAQF,sBAAuD;EACrFG,yBAAyB;EACzBC,iBAAiB;EAEzBC,YACEC,SAAuB,EACvBC,MAAwC;IAExC,KAAK,CAACD,SAAS,EAAEC,MAAM,CAAC;IACxB,IAAI,CAACC,MAAM,CAACD,MAAM,CAAC;EACrB;EAEQC,MAAMA,CAACD,MAAwC;IACrD,IACEA,MAAM,EAAEE,8BAA8B,KAAK,IAAI,IAC/C,OAAOC,QAAQ,KAAK,WAAW,EAC/B;MACA,IAAI,CAACP,yBAAyB,GAAG,MAAK;QACpC,IAAIO,QAAQ,CAACC,eAAe,KAAK,QAAQ,EAAE;UACzC,IAAI,CAACC,UAAU,EAAE,CAACC,KAAK,CAACC,KAAK,IAAG;YAC9Bb,kBAAkB,CAACa,KAAK,CAAC;UAC3B,CAAC,CAAC;;MAEN,CAAC;MACD,IAAI,CAACV,iBAAiB,GAAG,MAAK;QAC5B,IAAI,CAACQ,UAAU,EAAE,CAACC,KAAK,CAACC,KAAK,IAAG;UAC9Bb,kBAAkB,CAACa,KAAK,CAAC;QAC3B,CAAC,CAAC;MACJ,CAAC;MACDJ,QAAQ,CAACK,gBAAgB,CACvB,kBAAkB,EAClB,IAAI,CAACZ,yBAAyB,CAC/B;MAED;MACAO,QAAQ,CAACK,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACX,iBAAiB,CAAC;;EAEjE;EAEUY,UAAUA,CAAA;IAClB,IAAI,OAAON,QAAQ,KAAK,WAAW,EAAE;MACnC,IAAI,IAAI,CAACP,yBAAyB,EAAE;QAClCO,QAAQ,CAACO,mBAAmB,CAC1B,kBAAkB,EAClB,IAAI,CAACd,yBAAyB,CAC/B;;MAEH,IAAI,IAAI,CAACC,iBAAiB,EAAE;QAC1BM,QAAQ,CAACO,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACb,iBAAiB,CAAC;;;EAGtE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}